/*Given an array of integers heights
 representing the histogram's bar height
 where the width of each bar is 1, 
return the area of the largest rectangle in 
the histogram.*/



class Solution {
public:
   
 int largestRectangleArea(vector<int>& heights) {
        stack<int>st;
        int n=heights.size();
        int nsel[n];
        int nser[n];
        
        for(int i=n-1;i>=0;i--)
        {
            if(st.empty())
                nser[i]=-1;
            else
            {
                while(st.empty()==false && heights[st.top()]>=heights[i])
                    st.pop();
                if(st.empty())
                    nser[i]=-1;
                else
                    nser[i]=st.top();
            }
            st.push(i);
        }
        while(st.empty()==false)
        st.pop();
        for(int i=0;i<n;i++)
        {
            if(st.empty())
                nsel[i]=-1;
            else
            {
                while(st.empty()==false && heights[st.top()]>=heights[i])
                    st.pop();
                if(st.empty())
                    nsel[i]=-1;
                else
                    nsel[i]=st.top();
            }
            st.push(i);
        }
       
       
        int maxArea=0;
        for(int i=0;i<n;i++)
        {
            
                nsel[i]+=1;
            if(nser[i]==-1)
                nser[i]=n-1;
            else
                nser[i]-=1;
            
            if(heights[i]*(nser[i]-nsel[i]+1)>maxArea)
                maxArea=heights[i]*(nser[i]-nsel[i]+1);
            
                
            
        }
    return maxArea;
    }

};
